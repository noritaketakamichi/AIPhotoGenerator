 ERROR(TypeScript)  Argument of type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to parameter of type 'CustomRequest'.
  Types of property 'files' are incompatible.
    Type 'File[] | { [fieldname: string]: File[]; } | undefined' is not assignable to type '{ [fieldname: string]: File[]; } | undefined'.
      Type 'File[]' is not assignable to type '{ [fieldname: string]: File[]; }'.
        Index signature for type 'string' is missing in type 'File[]'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:88:14

    86 | const asyncHandler: AsyncHandler = (fn) => async (req, res, next) => {
    87 |   try {
  > 88 |     await fn(req, res, next);
       |              ^^^
    89 |   } catch (error) {
    90 |     next(error);
    91 |   }

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 3, '(strategy: "google", options: AuthenticateOptionsGoogle, callback?: ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'callbackURL' does not exist in type 'AuthenticateOptionsGoogle'.
  Overload 2 of 3, '(strategy: string | string[] | Strategy, callback?: AuthenticateCallback | ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'scope' does not exist in type 'AuthenticateCallback | ((...args: any[]) => any)'.
  Overload 3 of 3, '(strategy: string | string[] | Strategy, options: AuthenticateOptions, callback?: AuthenticateCallback | ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'callbackURL' does not exist in type 'AuthenticateOptions'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:175:16

    173 |       const callbackUrl = `${protocol}://${host}/auth/google/callback`;
    174 |       
  > 175 |       passport.authenticate('google', {
        |                ^^^^^^^^^^^^
    176 |         scope: ['profile', 'email'],
    177 |         callbackURL: callbackUrl,
    178 |       })(req, res, next);

 ERROR(TypeScript)  Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<express.Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'CustomRequest' is not assignable to type 'AuthenticatedRequest'.
      Types of property 'user' are incompatible.
        Type 'User | undefined' is not assignable to type 'User'.
          Type 'undefined' is not assignable to type 'User'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:548:52

    546 |
    547 |   // Get user's training models endpoint
  > 548 |   app.get("/api/models", requireAuth, asyncHandler(async (req: AuthenticatedRequest, res: Response) => {
        |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    549 |     try {
    550 |       if (!req.user?.id) {
    551 |         return res.status(401).json({ error: "Authentication required" });

 ERROR(TypeScript)  Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<express.Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'CustomRequest' is not assignable to type 'AuthenticatedRequest'.
      Types of property 'user' are incompatible.
        Type 'User | undefined' is not assignable to type 'User'.
          Type 'undefined' is not assignable to type 'User'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:574:55

    572 |
    573 |   // Generate image endpoint
  > 574 |   app.post("/api/generate", requireAuth, asyncHandler(async (req: AuthenticatedRequest, res: Response) => {
        |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    575 |     try {
    576 |       const { modelId, loraUrl, prompt } = req.body;
    577 |

 ERROR(TypeScript)  Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<express.Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<void | Response<any, Record<string, any>>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'CustomRequest' is not assignable to type 'AuthenticatedRequest'.
      Types of property 'user' are incompatible.
        Type 'User | undefined' is not assignable to type 'User'.
          Type 'undefined' is not assignable to type 'User'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:679:52

    677 |
    678 |   // Get user's generated photos endpoint
  > 679 |   app.get("/api/photos", requireAuth, asyncHandler(async (req: AuthenticatedRequest, res: Response) => {
        |                                                