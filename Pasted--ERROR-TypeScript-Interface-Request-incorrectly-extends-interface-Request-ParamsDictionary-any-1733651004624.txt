 ERROR(TypeScript)  Interface 'Request' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'logout' are incompatible.
    Type '(done: (err: any) => void) => void' is not assignable to type '{ (options: LogOutOptions, done: (err: any) => void): void; (done: (err: any) => void): void; }'.
      Types of parameters 'done' and 'options' are incompatible.
        Type 'LogOutOptions' is not assignable to type '(err: any) => void'.
          Type 'LogOutOptions' provides no match for the signature '(err: any): void'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:43:11

    41 |
    42 | // Extended Request type to include all possible properties
  > 43 | interface Request extends ExpressRequest {
       |           ^^^^^^^
    44 |   rawBody?: Buffer;
    45 |   user?: Express.User;
    46 |   files?: {

 ERROR(TypeScript)  Type 'Request' is not generic.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:78:8

    76 |   ReqQuery = ParsedQs,
    77 | > = (
  > 78 |   req: Request<P, ResBody, ReqBody, ReqQuery>,
       |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    79 |   res: Response<ResBody>,
    80 |   next: NextFunction,
    81 | ) => void | Promise<void>;

 ERROR(TypeScript)  Type 'Request' is not generic.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:86:10

    84 | type AsyncHandler = <P = ParamsDictionary, ResBody = any, ReqBody = any, ReqQuery = ParsedQs>(
    85 |   fn: (
  > 86 |     req: Request<P, ResBody, ReqBody, ReqQuery>,
       |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    87 |     res: Response<ResBody>,
    88 |     next: NextFunction,
    89 |   ) => Promise<void | Response<ResBody>>,

 ERROR(TypeScript)  Type '(req: any, res: Response<any, Record<string, any>>, next: NextFunction) => Response<any, Record<string, any>> | undefined' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs>'.
  Type 'Response<any, Record<string, any>> | undefined' is not assignable to type 'void | Promise<void>'.
    Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:100:7

     98 | };
     99 |
  > 100 | const requireAuth: RequestHandler = (req, res, next) => {
        |       ^^^^^^^^^^^
    101 |   if (!req.user) {
    102 |     return res.status(401).json({ error: 'Authentication required' });
    103 |   }

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 3, '(strategy: "google", options: AuthenticateOptionsGoogle, callback?: ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'callbackURL' does not exist in type 'AuthenticateOptionsGoogle'.
  Overload 2 of 3, '(strategy: string | string[] | Strategy, callback?: AuthenticateCallback | ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'scope' does not exist in type 'AuthenticateCallback | ((...args: any[]) => any)'.
  Overload 3 of 3, '(strategy: string | string[] | Strategy, options: AuthenticateOptions, callback?: AuthenticateCallback | ((...args: any[]) => any) | undefined): any', gave the following error.
    Object literal may only specify known properties, and 'callbackURL' does not exist in type 'AuthenticateOptions'.
 FILE  /home/runner/AI-photo-generator/server/routes.ts:180:14

    178 |     const callbackUrl = `${protocol}://${host}/auth/google/callback`;
    179 |     
  > 180 |     passport.authenticate('google', {
        |              ^^^^^^^^^^^^
    181 |       scope: ['profile', 'email'],
    182 |       callbackURL: callbackUrl
    183 |     })(req, res, next);

[TypeScript] Found 5 errors. Watching for file changes.